#include "main.h"
/**
 * _pow_recursion - This function raise x to the power of y.
 * @x: The number to be raised.
 * @y: The power.
 * Return: The value of x raised to the power of y.
 * Date: 8-03-2023
 */
int _pow_recursion(int x, int y)
{
	if (y < 0)
		return (-1);
	else if (y == 0)
		return (1);
	else
		return (x * _pow_recursion(x, y - 1));
}

r = _pow_recursion(5, 2);
    printf("%d\n", r);
x => number raised
y => power
- if power is less than 0 return y
- else if y is equal to 0
- x * p(x,y-1);
- x = 5 , y = 2;
1. 5 * p(5, 4);
2. 5 * p(5, 3);
3. 5 * p(5, 2) == 5 * 25 = 125(3)
4. 5 * p(5, 1) == 5 * 5 = 25(2)
5. 5 * p(5, 0) == 5 * 1	






































#include "main.h"
#include <stdio.h>

/**
 * main - check the code
 *
 * Return: Always 0.
 */
int main(void)
{
    int r;

    r = _pow_recursion(1, 10);
    printf("%d\n", r);
    r = _pow_recursion(1024, 0);
    printf("%d\n", r);
    r = _pow_recursion(2, 16);
    printf("%d\n", r);
    r = _pow_recursion(5, 2);
    printf("%d\n", r);
    r = _pow_recursion(5, -2);
    printf("%d\n", r);
    r = _pow_recursion(-5, 3);
    printf("%d\n", r);
    return (0);
}
